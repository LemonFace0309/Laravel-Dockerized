version: '3.8'
services:
  server:
    # image: 'nginx:stable-alpine'
    build:
      # context also sets file in which dockerfile will be built (ex nginx and src will be unreachable). Therefore we must set it to .
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - '8000:80'
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
      - ./src:/var/www/html/storage/logs
      - ./src:/var/www/html/storage/framework/sessions
      - ./src:/var/www/html/storage/framework/views
      - ./src:/var/www/html/storage/framework/cache
    # port not needed since containers have php and server have direct container to container interaction. We don't need to interact with localhost
  mysql:
    image: mysql:5.7
    env_file:
      - ./env/mysql.env
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    # overrides php dockerfile
    entrypoint: ["php", "/var/www/html/artisan"]
  npm:
    image: node:14
    # alternative to creating dockerfiles
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html
